# -*- coding: utf-8 -*-
"""
Задание 12.2


Функция ping_ip_addresses из задания 12.1 принимает только список адресов,
но было бы удобно иметь возможность указывать адреса с помощью диапазона,
например, 192.168.100.1-10.

В этом задании необходимо создать функцию convert_ranges_to_ip_list,
которая конвертирует список IP-адресов в разных форматах в список,
где каждый IP-адрес указан отдельно.

Функция ожидает как аргумент список, в котором содержатся IP-адреса
и/или диапазоны IP-адресов.

Элементы списка могут быть в формате:
* 10.1.1.1
* 10.1.1.1-10.1.1.10
* 10.1.1.1-10

Если адрес указан в виде диапазона, надо развернуть диапазон в отдельные
адреса, включая последний адрес диапазона.
Для упрощения задачи, можно считать, что в диапазоне всегда меняется только
последний октет адреса.

Функция возвращает список IP-адресов.

Например, если передать функции convert_ranges_to_ip_list такой список:
['8.8.4.4', '1.1.1.1-3', '172.21.41.128-172.21.41.132']

Функция должна вернуть такой список:
['8.8.4.4', '1.1.1.1', '1.1.1.2', '1.1.1.3', '172.21.41.128',
 '172.21.41.129', '172.21.41.130', '172.21.41.131', '172.21.41.132']

"""
import ipaddress

def convert_ranges_to_ip_list(iplist):
    result = []
    for ls in iplist:
        if '-' in ls:
            if len(ls.split('.')) == 4:
                oct1, oct2, oct3, oct4 = ls.split('.')
                a, b = oct4.split('-')
                gener = list(range(int(a), int(b)+1))
                for g in gener:
                    string =  oct1 +'.'+ oct2 +'.'+ oct3 +'.'+ str(g)
                    result.append(string)
            elif len(ls.split('.')) == 7 and '-' in ls.split('.')[3]:
                ipa, ipb = ls.split('-')
                sta = int(ipaddress.ip_address(ipa))
                sto = int(ipaddress.ip_address(ipb))
                for lll in list(range(sta, sto+1)):
                    result.append(str(ipaddress.ip_address(lll)))
        else:
            result.append(ls)
    return result
    
print (convert_ranges_to_ip_list(['8.8.4.4', '1.1.1.1-3', '172.21.41.128-172.21.41.132']))

